// Code generated by go-swagger; DO NOT EDIT.

package apimodel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LinkUnlinks link unlinks
//
// swagger:model LinkUnlinks
type LinkUnlinks []*LinkUnlinksItems0

// Validate validates this link unlinks
func (m LinkUnlinks) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this link unlinks based on the context it is used
func (m LinkUnlinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {

		if m[i] != nil {
			if err := m[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// LinkUnlinksItems0 link unlinks items0
//
// swagger:model LinkUnlinksItems0
type LinkUnlinksItems0 struct {

	// metadata
	Metadata *LinkUnlinksItems0Metadata `json:"metadata,omitempty"`

	// to entity id
	ToEntityID int64 `json:"to_entity_id,omitempty"`

	// to entity type
	ToEntityType string `json:"to_entity_type,omitempty"`
}

// Validate validates this link unlinks items0
func (m *LinkUnlinksItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LinkUnlinksItems0) validateMetadata(formats strfmt.Registry) error {
	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this link unlinks items0 based on the context it is used
func (m *LinkUnlinksItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMetadata(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LinkUnlinksItems0) contextValidateMetadata(ctx context.Context, formats strfmt.Registry) error {

	if m.Metadata != nil {
		if err := m.Metadata.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LinkUnlinksItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinkUnlinksItems0) UnmarshalBinary(b []byte) error {
	var res LinkUnlinksItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// LinkUnlinksItems0Metadata link unlinks items0 metadata
//
// swagger:model LinkUnlinksItems0Metadata
type LinkUnlinksItems0Metadata struct {

	// catalog id
	CatalogID int64 `json:"catalog_id,omitempty"`
}

// Validate validates this link unlinks items0 metadata
func (m *LinkUnlinksItems0Metadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this link unlinks items0 metadata based on context it is used
func (m *LinkUnlinksItems0Metadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LinkUnlinksItems0Metadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinkUnlinksItems0Metadata) UnmarshalBinary(b []byte) error {
	var res LinkUnlinksItems0Metadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
